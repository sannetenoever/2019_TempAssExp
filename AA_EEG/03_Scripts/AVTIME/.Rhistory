exp(tab)
# now at different levels of dev:
ACCmat[,8] = ACCmat[,7] - 1
colnames(ACCmat)[8] <- "devRS"
ACCmat.mod4atend = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat[,8] = ACCmat[,7] - 0.5
ACCmat.mod4atmid = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4)
summary(ACCmat.mod4atmid)
summary(ACCmat.mod4atend)
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod4atmid
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmat.mod4
m = ACCmat.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmatZ = ACCmat
ACCmatZ[,7] = (ACCmat[,7]-mean(ACCmat[,7]))/sd(ACCmat[,7])
ACCmatZ[,6] = (ACCmat[,6]-mean(ACCmat[,6]))/sd(ACCmat[,6])
ACCmatZ.mod3 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + ass*dev + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
ACCmatZ.mod4 = glmer(accuracy ~ sound + ass + dev + curval + ass*dev + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmatZ.mod3
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmat[,8] = ACCmat[,7] - 1
colnames(ACCmat)[8] <- "devRS"
ACCmat.mod4atend = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat[,8] = ACCmat[,7] - 0.5
ACCmat.mod4atmid = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4)
summary(ACCmat.mod4atmid)
summary(ACCmat.mod4atend)
summary(ACCmat.mod4)
summary(ACCmat.mod4atmid)
summary(ACCmat.mod4atend)
m = ACCmat.mod4atmid
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod4)
m = ACCmat.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod4atmid
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod4atmid)
m = ACCmat.mod4atmid
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod4atend
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
rm(list=ls())
gc()
library(lme4)
## try the same on own data
# read in the .mat file
library(R.matlab)
Matout = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_02_BIGMAT.mat")
varnames = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_02_BIGMAT_varnames.mat")
summary(Matout)
ACCmat <- data.frame(matrix(unlist(Matout), nrow = 17500))
vn <-unlist(varnames)
colnames(ACCmat) <- vn
ACCmat$accuracy <- as.factor(ACCmat$accuracy)
ACCmat$sound <- as.factor(ACCmat$sound)
ACCmat$ass <- as.factor(ACCmat$ass)
ACCmat$block <- as.factor(ACCmat$block)
ACCmat$pp <- as.factor(ACCmat$pp)
str(ACCmat)
# random intercept only:
ACCmat.nul = glmer(accuracy ~ (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod1 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + sound*dev + ass*dev + ass*dev*sound + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod2 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + sound*dev + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod3 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod4 = glmer(accuracy ~ sound + ass + dev + curval + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5 = glmer(accuracy ~ sound + ass + dev + curval + (1|pp), data=ACCmat, family = binomial(link = "logit"))
#
summary(ACCmat.mod1)
summary(ACCmat.mod2)
summary(ACCmat.mod3)
summary(ACCmat.mod4)
summary(ACCmat.mod5)
# look at parcimoneouscy
anova(ACCmat.mod5, ACCmat.mod4)
summary(ACCmat.mod5)
summary(ACCmat.mod4)
ACCmatZ = ACCmat
ACCmatZ[,7] = (ACCmat[,7]-mean(ACCmat[,7]))/sd(ACCmat[,7])
ACCmatZ[,6] = (ACCmat[,6]-mean(ACCmat[,6]))/sd(ACCmat[,6])
ACCmatZ.mod3 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + ass*dev + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
ACCmatZ.mod4 = glmer(accuracy ~ sound + ass + dev + curval + ass*dev + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod3
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod4)
m = ACCmatZ.mod3
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod4)
m = ACCmatZ.mod4
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod5)
# now at different levels of dev:
ACCmat[,10] = ACCmat[,7] - 1
colnames(ACCmat)[10] <- "devRS"
ACCmat.mod4atend = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat[,10] = ACCmat[,7] - 0.5
ACCmat.mod4atmid = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4)
summary(ACCmat.mod4atmid)
summary(ACCmat.mod4atend)
m = ACCmat.mod4atend
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod4atend)
summary(ACCmat.mod4)
summary(ACCmat.mod3)
m = ACCmat.mod3
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod5)
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
rm(list=ls())
gc()
library(lme4)
## try the same on own data
# read in the .mat file
library(R.matlab)
Matout = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_02_BIGMAT.mat")
varnames = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_02_BIGMAT_varnames.mat")
summary(Matout)
ACCmat <- data.frame(matrix(unlist(Matout), nrow = 17500))
vn <-unlist(varnames)
colnames(ACCmat) <- vn
ACCmat$accuracy <- as.factor(ACCmat$accuracy)
ACCmat$sound <- as.factor(ACCmat$sound)
ACCmat$ass <- as.factor(ACCmat$ass)
ACCmat$block <- as.factor(ACCmat$block)
ACCmat$pp <- as.factor(ACCmat$pp)
str(ACCmat)
# random intercept only:
ACCmat.nul = glmer(accuracy ~ (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod1 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + sound*dev + ass*dev + ass*dev*sound + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod2 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + sound*dev + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod3 = glmer(accuracy ~ sound + ass + dev + curval + sound*ass + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod4 = glmer(accuracy ~ sound + ass + dev + curval + ass*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5 = glmer(accuracy ~ sound + ass + dev + curval + (1|pp), data=ACCmat, family = binomial(link = "logit"))
#
summary(ACCmat.mod1)
summary(ACCmat.mod2)
summary(ACCmat.mod3)
summary(ACCmat.mod4)
summary(ACCmat.mod5)
# look at parcimoneouscy
anova(ACCmat.mod5, ACCmat.mod4)
ACCmatZ = ACCmat
ACCmatZ[,7] = (ACCmat[,7]-mean(ACCmat[,7]))/sd(ACCmat[,7])
ACCmatZ[,6] = (ACCmat[,6]-mean(ACCmat[,6]))/sd(ACCmat[,6])
ACCmatZ.mod4 = glmer(accuracy ~ sound + ass + dev + curval + ass*dev + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
# now at different levels of dev:
ACCmat[,10] = ACCmat[,7] - 1
colnames(ACCmat)[10] <- "devRS"
ACCmat.mod4atend = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat[,10] = ACCmat[,7] - 0.5
ACCmat.mod4atmid = glmer(accuracy ~ sound + ass + devRS + curval + ass*devRS + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4)
summary(ACCmat.mod4atmid)
summary(ACCmat.mod4atend)
m = ACCmat.mod4atend
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
# plot of raw data
#http://ddar.datavis.ca/pages/extra/titanic-glm-ex.pdf and https://cran.r-project.org/web/packages/effects/effects.pdf
library(ggplot2)
setEPS()
# loess smoothing (nonparametric smoothed)
postscript("D:/Experiments/StartTimeExp/AA_EEG/05_Figures/AVTIME/S01_02_OverallAsseffect.eps")
#ggplot(ACCmat, aes(dev, as.numeric(accuracy)-1, color=ass)) +
#  stat_smooth(method="loess", formula = y~x, span = 2, alpha=1, size=2, aes(fill=ass)) +
#  xlab("Experiment development") + ylab("Propertion (accuracy)") + coord_cartesian(ylim = c(0.55, 0.75))
ggplot(ACCmat, aes(dev, as.numeric(accuracy)-1, color=ass)) +
stat_smooth(method="loess", formula = y~x, span = 2, alpha=1, size=2, aes(fill=ass)) +
xlab("Experiment development") + ylab("Propertion (accuracy)")
dev.off()
graphics.off()
# Correlation with 4 Hz
# Add Frequency as predictor
ACCmat.mod4F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + ass*Freq*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*Freq + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound + ass + dev + Freq + curval + (1|pp), data=ACCmat, family = binomial(link = "logit"))
#
summary(ACCmat.mod4F)
summary(ACCmat.mod5F)
summary(ACCmat.mod6F)
summary(ACCmat.mod7F)
anova(ACCmat.mod4, ACCmat.mod5F)
anova(ACCmat.mod5, ACCmat.mod6F)
# plot
setEPS()
postscript("D:/Experiments/StartTimeExp/AA_EEG/05_Figures/AVTIME/S01_02_Freq.eps")
geom_point(ACCmat, aes(Freq, as.numeric(accuracy)-1), color=ass)
ggplot(ACCmat, aes(FreqDif, as.numeric(accuracy)-1, color=ass)) +
stat_smooth(method="loess", formula = y~x, span = 2, alpha=0.2, size=2, aes(fill=ass)) +
xlab("Frequency Difference") + ylab("Propertion (accuracy)")
dev.off()
graphics.off()
ACCmat.mod4F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + ass*Freq*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*Freq + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound + ass + dev + Freq + curval + (1|pp), data=ACCmat, family = binomial(link = "logit"))
View(ACCmatZ)
View(ACCmatZ)
View(ACCmatZ)
View(ACCmatZ)
summary(ACCmat.mod6F)
summary(ACCmat.mod6F)
summary(ACCmat.mod5F)
ACCmatZ = ACCmat
ACCmatZ[,7] = (ACCmat[,7]-mean(ACCmat[,7]))/sd(ACCmat[,7])
ACCmatZ[,6] = (ACCmat[,6]-mean(ACCmat[,6]))/sd(ACCmat[,6])
ACCmatZ[,8] = (ACCmat[,8]-mean(ACCmat[,8]))/sd(ACCmat[,8])
ACCmatZ[,9] = (ACCmat[,9]-mean(ACCmat[,9]))/sd(ACCmat[,9])
ACCmatZ.mod5F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
# Add Frequency Difference as predictor
ACCmat.mod4F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*dev + ass*FreqDif + ass*FreqDif*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*dev + ass*FreqDif + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*Freq + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + (1|pp), data=ACCmat, family = binomial(link = "logit"))
#
summary(ACCmat.mod4F)
summary(ACCmat.mod5F)
summary(ACCmat.mod6F)
summary(ACCmat.mod7F)
anova(ACCmat.mod4, ACCmat.mod5F)
anova(ACCmat.mod5, ACCmat.mod6F)
ACCmatZ.mod5F = glmer(accuracy ~ sound + ass + dev + Freq + curval + ass*dev + ass*Freq + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmatZ.mod5F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*dev + ass*Freq + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod5F)
exp(tab)
ACCmatZ.mod5F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*dev + ass*Freq + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmatZ.mod5F = glmer(accuracy ~ sound + ass + dev + FreqDif + curval + ass*dev + ass*FreqDif + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
rm(list=ls())
gc()
library(lme4)
## try the same on own data
# read in the .mat file
library(R.matlab)
Matout = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_05_BIGMAT.mat")
varnames = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_05_BIGMAT_varnames.mat")
summary(Matout)
ACCmat <- data.frame(matrix(unlist(Matout), nrow = 20000))
vn <-unlist(varnames)
colnames(ACCmat) <- vn
ACCmat$accuracy <- as.factor(ACCmat$accuracy)
ACCmat$sound <- as.factor(ACCmat$sound)
ACCmat$timepoint <- as.factor(ACCmat$timepoint)
ACCmat$ass <- as.factor(ACCmat$ass)
ACCmat$pp <- as.factor(ACCmat$pp)
str(ACCmat)
# Add Excitability distance as predictor
ACCmat.mod5F = glmer(accuracy ~ sound+ phasedist + timepoint + curval +timepint*phasedist + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist + sound*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod8F = glmer(accuracy ~ sound+ phasedist + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod9F = glmer(accuracy ~ sound+ phasedist + curval +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4F)
rm(list=ls())
gc()
library(lme4)
## try the same on own data
# read in the .mat file
library(R.matlab)
Matout = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_05_BIGMAT.mat")
varnames = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S01_05_BIGMAT_varnames.mat")
summary(Matout)
ACCmat <- data.frame(matrix(unlist(Matout), nrow = 20000))
vn <-unlist(varnames)
colnames(ACCmat) <- vn
ACCmat$accuracy <- as.factor(ACCmat$accuracy)
ACCmat$sound <- as.factor(ACCmat$sound)
ACCmat$timepoint <- as.factor(ACCmat$timepoint)
ACCmat$ass <- as.factor(ACCmat$ass)
ACCmat$pp <- as.factor(ACCmat$pp)
str(ACCmat)
# Add Excitability distance as predictor
ACCmat.mod5F = glmer(accuracy ~ sound+ phasedist + timepoint + curval +timepint*phasedist + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist + sound*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod8F = glmer(accuracy ~ sound+ phasedist + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod9F = glmer(accuracy ~ sound+ phasedist + curval +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4F)
# Add Excitability distance as predictor
ACCmat.mod5F = glmer(accuracy ~ sound+ phasedist + timepoint + curval +timepoint*phasedist + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist + sound*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod7F = glmer(accuracy ~ sound+ phasedist + ass + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod8F = glmer(accuracy ~ sound+ phasedist + curval + sound*phasedist +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod9F = glmer(accuracy ~ sound+ phasedist + curval +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod4F)
summary(ACCmat.mod5F)
summary(ACCmat.mod6F)
summary(ACCmat.mod7F)
summary(ACCmat.mod8F)
summary(ACCmat.mod9F)
summary(ACCmat.mod4F)
summary(ACCmat.mod5F)
ACCmat.mod5F = glmer(accuracy ~ sound+ phasedist + timepoint + curval + sound*ass +timepoint*phasedist + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod5F)
summary(ACCmat.mod5F)
# center and repeat
ACCmat[,11] = ACCmat[,9]-0.5
colnames(ACCmat)[11] <- "phasedistpi"
ACCmat.mod8FP = glmer(accuracy ~ sound+ phasedistpi + curval + sound*phasedistpi +  (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod8FP)
library(plyr)
ACCsnd1 <- subset(ACCmat, sound == 1)
ACCsnd2 <- subset(ACCmat, sound == 2)
ACCsnd1.S8F = glmer(accuracy ~ phasedist + curval + ass + (1|pp), data=ACCsnd1, family = binomial(link = "logit"))
ACCsnd2.S8F = glmer(accuracy ~ phasedist + curval + ass +  (1|pp), data=ACCsnd2, family = binomial(link = "logit"))
summary(ACCsnd1.S8F)
summary(ACCsnd2.S8F)
# early time point effect
ACCtp1 <- subset(ACCmat, timepoint == 50)
ACCtp1.M1 = glmer(accuracy ~ sound + phasedist + sound*phasedist + (1|pp), data=ACCtp1, family = binomial(link = "logit"))
#ACCtp1.M1 = glmer(accuracy ~ sound + phasedist + curval + (1|pp), data=ACCtp1, family = binomial(link = "logit"))
summary(ACCtp1.M1)
ACCtp2 <- subset(ACCmat, timepoint == 175)
ACCtp2.M1 = glmer(accuracy ~ sound + phasedist + curval + sound*phasedist + (1|pp), data=ACCtp1, family = binomial(link = "logit"))
#ACCtp2.M1 = glmer(accuracy ~ sound + phasedist + curval + (1|pp), data=ACCtp2, family = binomial(link = "logit"))
summary(ACCtp2.M1)
View(ACCsnd1)
View(ACCmat)
ACCmatZ = ACCmat
ACCmatZ[,11] = (ACCmat[,11]-mean(ACCmat[,11]))/sd(ACCmat[,11])
ACCmatZ.mod5F = glmer(accuracy ~ sound+ phasedist + timepoint + curval + timepoint*phasedist + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmatZ.mod5F
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
#install.packages("lme4")
#install.packages("arm")
#install.packages("R.matlab")
#install.packages("jtools")
library(lme4)
## try the same on own data
# read in the .mat file
library(R.matlab)
Matout = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S05_00_BIGMAT.mat")
varnames = readMat("D:/Experiments/StartTimeExp/AA_EEG/04_MidData/AVTIME/SaveD/S05_00_BIGMAT_varnames.mat")
summary(Matout)
ACCmat <- data.frame(matrix(unlist(Matout), nrow = 15682))
vn <-unlist(varnames)
colnames(ACCmat) <- vn
ACCmat$accuracy <- as.factor(ACCmat$accuracy)
ACCmat$sound <- as.factor(ACCmat$sound)
ACCmat$ass <- as.factor(ACCmat$ass)
ACCmat$block <- as.factor(ACCmat$block)
ACCmat$pp <- as.factor(ACCmat$pp)
str(ACCmat)
# random intercept only:
# start from previous model
ACCmat.mod1 = glmer(accuracy ~ sound + ass + dev + pow + curval + ass*dev + pow*ass + pow*dev + pow*ass*dev  + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod2 = glmer(accuracy ~ sound + ass + dev + pow + curval + ass*dev + pow*ass + pow*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod3 = glmer(accuracy ~ sound + ass + dev + pow + curval + pow*ass + pow*dev + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod4 = glmer(accuracy ~ sound + ass + dev + pow + curval + pow*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod5 = glmer(accuracy ~ sound + ass + curval + pow + pow*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat.mod6 = glmer(accuracy ~ sound + ass + curval + pow + (1|pp), data=ACCmat, family = binomial(link = "logit"))
#
summary(ACCmat.mod1)
summary(ACCmat.mod2)
summary(ACCmat.mod3)
summary(ACCmat.mod4)
summary(ACCmat.mod5)
summary(ACCmat.mod6)
# look at parcimoneouscy
anova(ACCmat.mod6, ACCmat.mod5)
summary(ACCmat.mod5)
summary(ACCmat.mod6)
summary(ACCmat.mod5)
View(ACCmat)
ACCmatZ = ACCmat
ACCmatZ[,7] = (ACCmat[,7]-mean(ACCmat[,7]))/sd(ACCmat[,7])
ACCmatZ[,6] = (ACCmat[,6]-mean(ACCmat[,6]))/sd(ACCmat[,6])
ACCmatZ[,8] = (ACCmat[,8]-mean(ACCmat[,8]))/sd(ACCmat[,8])
ACCmat.mod5 = glmer(accuracy ~ sound + ass + curval + pow + pow*ass + (1|pp), data=ACCmatZ, family = binomial(link = "logit"))
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
ACCmat.mod5 = glmer(accuracy ~ sound + ass + curval + pow + pow*ass + (1|pp), data=ACCmat, family = binomial(link = "logit"))
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
# now at different levels of power:
ACCmat[,9] = ACCmat[,8] - 1
colnames(ACCmat)[9] <- "devpow"
ACCmat.mod5plusSD = glmer(accuracy ~ sound + ass + devpow + curval + ass*devpow + (1|pp), data=ACCmat, family = binomial(link = "logit"))
ACCmat[,9] = ACCmat[,8] + 1
ACCmat.mod5minSD = glmer(accuracy ~ sound + ass + devpow + curval + ass*devpow + (1|pp), data=ACCmat, family = binomial(link = "logit"))
summary(ACCmat.mod5)
summary(ACCmat.mod5plusSD)
summary(ACCmat.mod5minSD)
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod5plusSD
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmat.mod5plusSD)
m = ACCmat.mod5plusSD
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod5minSD
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmat.mod5
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
# now do the original GLM with only low and high power trials:
ACCmatL = subset(ACCmat, pow < 0)
ACCmatH = subset(ACCmat, pow > 0)
ACCmatL.mod1 = glmer(accuracy ~ sound + ass + dev + curval + (1|pp), data=ACCmatL, family = binomial(link = "logit"))
ACCmatH.mod1 = glmer(accuracy ~ sound + ass + dev + curval + (1|pp), data=ACCmatH, family = binomial(link = "logit"))
summary(ACCmatL.mod1)
summary(ACCmatH.mod1)
m = ACCmatL.mod1
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
summary(ACCmatL.mod1)
m = ACCmatL.mod1
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
m = ACCmatH.mod1
se <- sqrt(diag(vcov(m)))
(tab <- cbind(Est = fixef(m), LL = fixef(m)-1.96*se, UL = fixef(m)+1.96*se))
exp(tab)
